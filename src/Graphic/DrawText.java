package Graphic;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.GraphicsEnvironment;
import javax.swing.JColorChooser;

public class DrawText extends javax.swing.JFrame {

    Graphics g = null;  //graphcs object for drawing
    Color color = null;  //current used color
    Font font = null; //current used font
    int fontStyle = Font.PLAIN;  //current font properties
    int fontSize = 15;
    String fontName = Font.SANS_SERIF;
    String drawnText = ""; //text will be drawn

    public DrawText() {  //constructor
        initComponents();
        this.setSize(800, 400);
        loadFonts();  //load system fonts to combobox cbfont
        g = this.pDraw.getGraphics();  //get graphics object
        color = Color.BLACK; //set up default color
        g.setColor(color);
        //set up dafault font
        font = new Font(fontName, fontStyle, fontSize);
        this.showFontProperties();  //view font properties
    }

    private void loadFonts() {  //load system fonts to combobox
        //get all system font installed
        GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Font[] fonts = env.getAllFonts();
        //load fonts to combobox cbFont
        this.cbFont.removeAllItems();
        String fName; //font name
        for (Font f : fonts) {
            fName = f.getFontName();
            this.cbFont.addItem(fName);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pControl = new javax.swing.JPanel();
        lbColor = new javax.swing.JLabel();
        btnColor = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cbFont = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtSize = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbFontStyle = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        pDraw = new javax.swing.JPanel();
        pProperites = new javax.swing.JPanel();
        s = new javax.swing.JScrollPane();
        txtProperties = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Draw Text");

        pControl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Control Panel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N

        lbColor.setBackground(new java.awt.Color(0, 0, 0));
        lbColor.setForeground(new java.awt.Color(255, 255, 255));
        lbColor.setOpaque(true);

        btnColor.setText("Choose Color");
        btnColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorActionPerformed(evt);
            }
        });

        jLabel2.setText("Font:");

        cbFont.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFontActionPerformed(evt);
            }
        });

        jLabel3.setText("Size:");

        txtSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSizeFocusLost(evt);
            }
        });
        txtSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSizeActionPerformed(evt);
            }
        });

        jLabel4.setText("Style:");

        cbFontStyle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PLAIN", "BOLD", "ITALID" }));
        cbFontStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFontStyleActionPerformed(evt);
            }
        });

        jLabel5.setText("Drawn Text:");

        javax.swing.GroupLayout pControlLayout = new javax.swing.GroupLayout(pControl);
        pControl.setLayout(pControlLayout);
        pControlLayout.setHorizontalGroup(
            pControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbColor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbFontStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE))
        );
        pControlLayout.setVerticalGroup(
            pControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pControlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnColor)
                            .addComponent(jLabel2)
                            .addComponent(cbFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(cbFontStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pDraw.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Click mouse to draw text", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N
        pDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pDrawMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pDrawLayout = new javax.swing.GroupLayout(pDraw);
        pDraw.setLayout(pDrawLayout);
        pDrawLayout.setHorizontalGroup(
            pDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );
        pDrawLayout.setVerticalGroup(
            pDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
        );

        pProperites.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Font Properties", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        txtProperties.setColumns(20);
        txtProperties.setRows(5);
        s.setViewportView(txtProperties);

        javax.swing.GroupLayout pProperitesLayout = new javax.swing.GroupLayout(pProperites);
        pProperites.setLayout(pProperitesLayout);
        pProperitesLayout.setHorizontalGroup(
            pProperitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
        );
        pProperitesLayout.setVerticalGroup(
            pProperitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(s, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pDraw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pProperites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pProperites, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pDraw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorActionPerformed
        //get color from color chooser
        Color newColor = JColorChooser.showDialog(this, "Choose a color", color);
        if (newColor != null) {
            color = newColor;
            lbColor.setBackground(color);
        }
    }//GEN-LAST:event_btnColorActionPerformed

    private void cbFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFontActionPerformed
        //change font name
        this.fontName = (String) cbFont.getSelectedItem();
        font = new Font(fontName, fontStyle, fontSize);
        this.showFontProperties();
    }//GEN-LAST:event_cbFontActionPerformed

    private void cbFontStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFontStyleActionPerformed
        //change font style
        String str = (String) cbFontStyle.getSelectedItem();
        if (str.equalsIgnoreCase("Bold")) {
            fontStyle = Font.BOLD;
        } else if (str.equalsIgnoreCase("Italic")) {
            fontStyle = Font.ITALIC;
        } else {
            fontStyle = Font.PLAIN;
        }
        font = new Font(fontName, fontStyle, fontSize);
        this.showFontProperties();
    }//GEN-LAST:event_cbFontStyleActionPerformed

    private void txtSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSizeFocusLost
        //change font size
        fontSize = Integer.parseInt(txtSize.getText());
        font = new Font(fontName, fontStyle, fontSize);
        g.setFont(font);
        this.showFontProperties();
    }//GEN-LAST:event_txtSizeFocusLost

    private void txtSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSizeActionPerformed
        ////current used font
        //When user enters preferred size then strikes the ENTER key
        fontSize = Integer.parseInt(txtSize.getText());
        font = new Font(fontName, fontStyle, fontSize);
        g.setFont(font);
        this.showFontProperties();
    }//GEN-LAST:event_txtSizeActionPerformed

    private void pDrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDrawMouseClicked
        //Draw string at the mouse position
        int x = evt.getX();
        int y = evt.getY();
        g.setFont(font);
        g.setColor(color);
        drawnText = txt1.getText();
        g.drawString(drawnText, x, y);
        this.showFontProperties();
    }//GEN-LAST:event_pDrawMouseClicked

    private void showFontProperties() {
        txtProperties.setText("");
        txtProperties.append("Family: " + font.getFamily() + "\n");
        txtProperties.append("Name: " + font.getName() + "\n");
        txtProperties.append("Style: " + font.getStyle() + "\n");
        txtProperties.append("Size: " + font.getSize() + "\n");
        if (g != null) {
            FontMetrics fm = g.getFontMetrics();
            txtProperties.append("\nFont metrics:\n");
            txtProperties.append("Ascent: " + fm.getAscent() + "\n");
            txtProperties.append("Max. Ascent: " + fm.getMaxAscent() + "\n");
            txtProperties.append("Descent: " + fm.getDescent() + "\n");
            txtProperties.append("Leading: " + fm.getLeading() + "\n");
            txtProperties.append("Height: " + fm.getHeight() + "\n");
            txtProperties.append("Max Advance: " + fm.getMaxAdvance() + "\n");
            if (drawnText.length() > 0) {
                txtProperties.append("String width: " + fm.stringWidth(drawnText) + "\n");
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrawText.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrawText.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrawText.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrawText.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DrawText().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnColor;
    private javax.swing.JComboBox<String> cbFont;
    private javax.swing.JComboBox<String> cbFontStyle;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lbColor;
    private javax.swing.JPanel pControl;
    private javax.swing.JPanel pDraw;
    private javax.swing.JPanel pProperites;
    private javax.swing.JScrollPane s;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextArea txtProperties;
    private javax.swing.JTextField txtSize;
    // End of variables declaration//GEN-END:variables

}
